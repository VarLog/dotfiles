# utf8 is on
set -g utf8 on
set -g status-utf8 on

# set only on OS X where it's required
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Terminal 
set -g default-terminal "xterm-256color"
set-window-option -g xterm-keys on

# No delay for escape key press
set -sg escape-time 0

# C-b is not acceptable -- Vim uses it
# remap prefix to Control + a
unbind C-b
set-option -g prefix C-a

unbind C-a
# quick windows cycling
#bind-key C-a last-window
# quick pane cycling
bind C-a select-pane -t :.+

# rebind pane tiling
bind v split-window -h
bind h split-window

# screen like window toggling
bind Tab last-window
bind Escape copy-mode

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# keys
unbind C-Left
unbind C-Right
unbind M-Left
unbind M-Right

bind -n C-Left send-keys Escape "[1;5D"
bind -n C-Right send-keys Escape "[1;5C"

bind -n M-Left send-keys Escape "[1;9D"
bind -n M-Right send-keys Escape "[1;9C"

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# History limit
set-option -g history-limit 20000

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime)"

set -g status-left "#h:[#S] | "
set -g status-left-length 80

set -g status-right "%H:%M %d-%h-%Y"

# Highlight active window
setw -g window-status-current-format "|#I:#W|"
set-window-option -g window-status-current-bg green
set-window-option -g window-status-current-fg black

set -g mouse off

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "pbcopy"

